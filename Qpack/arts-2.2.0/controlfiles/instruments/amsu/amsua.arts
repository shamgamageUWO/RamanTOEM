#DEFINITIONS:  -*-sh-*-

# ARTS setup file for AMSUA simulations
#
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# THIS FILE IS CURRENTLY NOT SIMULATING TRUE AMSU-A 
# ONLY THE AMSU-A CHANNEL FUNCTIONALITY
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Arts2 {


# 1. General
#-----------

output_file_formatSetZippedAscii

# AMSU uses Planck brightness temperatures
# ---
StringSet( iy_unit, "PlanckBT" )

#
# modifiy the maximum propagation step, from the default(10.e3)
# to 250 m :
#
NumericSet( ppath_lmax, 250 )

# Surface
Copy( surface_rtprop_agenda,
      surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_surface )


# 2. Spectroscopy
#----------------

# We take a smaller cutoff, since the line-by-line calculation is 
# only for O3, where only the local lines matter.
# Could be speed-optimized further by selecting only the relevant 
# lines from the line list.
ArrayOfLineshapeSpecCreate( abs_lineshapeDefine )
abs_lineshapeDefine( abs_lineshapeDefine, "Voigt_Kuntz6", "VVH", 5e9 )

abs_speciesSet( species=[ "H2O-PWR98",
                          "O3",
                          "O2-PWR93",
                          "N2-SelfContStandardType" ] )

# Read HITRAN catalog (needed for O3):
#abs_linesReadFromHitran( abs_lines,
#                            "/storage3/data/catalogue/hitran/hitran2008/HITRAN2008/HITRAN08.par",
#                            17e9,
#                            120e9 )
#WriteXML( "ascii", abs_lines, amsua.hitran08_lines.xml"" )

ReadXML( abs_lines, "amsua.hitran08_lines.xml" )
abs_lines_per_speciesCreateFromLines

# WARNING: If you redefine abs_species, and want to do a line-by-line
# calculation, you also have to call
# abs_lines_per_speciesCreateFromLines again.


# 3. Sensor:
#-----------

# Definition of sensor position and LOS
# ---
ReadXML( sensor_los, "amsub.sensor_los.xml" )
nrowsGet( nrows, sensor_los )
ncolsGet( ncols, sensor_los )
MatrixSetConstant( sensor_pos, nrows, ncols, 850e3 )


# Sensor response setup
# ---
#Nominal frequencies 
MatrixSet( sensor_description_amsu,
           #   centerFreq,      offset1, offset2,   BW   ,  Fgrid  ; ChanNr 
		   #   all frequencies are in Hz 
           [    23.8e9,         0.0e6,   0.0e6,     270e6 ,  13e6; #1
                31.4e9,         0.0e6,   0.0e6,     180e6 ,   9e6; #2
                50.3e9,         0.0e6,   0.0e6,     180e6 ,   9e6; #3
                52.8e9,         0.0e6,   0.0e6,     400e6 ,   20e6; #4
                53.596115e9,  115.0e6,   0.0e6,     170e6 ,   8e6; #5
                54.400e9,       0.0e6,   0.0e6,     400e6 ,   20e6; #6
                54.940e9,       0.0e6,   0.0e6,     400e6 ,   20e6; #7
                55.50e9,        0.0e6,   0.0e6,     330e6 ,   15e6; #8
                57.290344e9,    0.0e6,   0.0e6,     330e6 ,   15e6; #9
                57.290344e9,  217.0e6,   0.0e6,      78e6 ,    4e6; #10
                57.290344e9,  322.2e6,   48.0e6,     36e6 ,  1.5e6; #11
                57.290344e9,  322.2e6,   22.0e6,     16e6 ,  0.8e6; #12
                57.290344e9,  322.2e6,   10.0e6,      8e6 ,  0.4e6; #13
                57.290344e9,  322.2e6,    4.5e6,      3e6 ,  0.1e6; #14
      	        89.0e9,         0.0e9,    0.0e6,     2000e6 ,100e6 # 15
      	     ] )

sensor_responseGenericAMSU
}
